(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{209:function(e,t,a){"use strict";a.r(t);var v=a(0),c=Object(v.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"vue-和-react-之间的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-和-react-之间的区别"}},[e._v("#")]),e._v(" Vue 和 React 之间的区别")]),e._v(" "),a("p",[e._v("Vue 的表单可以使用 v-model 支持双向绑定，相比于 React 来说开发上更加方便，当然了 v-model 其实就是个语法糖，本质上和 React 写表单的方式没什么区别。")]),e._v(" "),a("p",[e._v("改变数据方式不同，Vue 修改状态相比来说要简单许多，React 需要使用 setState 来改变状态，并且使用这个 API 也有一些坑点。并且 Vue 的底层使用了依赖追踪，页面更新渲染已经是最优的了，但是 React 还是需要用户手动去优化这方面的问题。")]),e._v(" "),a("p",[e._v("React 16以后，有些钩子函数会执行多次，这是因为引入 Fiber 的原因")]),e._v(" "),a("p",[e._v("React 需要使用 JSX，有一定的上手成本，并且需要一整套的工具链支持，但是完全可以通过 JS 来控制页面，更加的灵活。Vue 使用了模板语法，相比于 JSX 来说没有那么灵活，但是完全可以脱离工具链，通过直接编写 render 函数就能在浏览器中运行。")]),e._v(" "),a("p",[e._v("在生态上来说，两者其实没多大的差距，当然 React 的用户是远远高于 Vue 的。")]),e._v(" "),a("p",[e._v("在上手成本上来说，Vue 一开始的定位就是尽可能的降低前端开发的门槛，然而 React 更多的是去改变用户去接受它的概念和思想，相较于 Vue 来说上手成本略高。")]),e._v(" "),a("p",[e._v("引用尤大的一句话")]),e._v(" "),a("blockquote",[a("p",[e._v("说到底，就算你证明了 A 比 B 牛逼，也不意味着你或者你的项目就牛逼了... 比起争这个，不如多想想怎么让自己变得更牛逼吧。")])])])}),[],!1,null,null,null);t.default=c.exports}}]);